{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\resume_website_(git)\\\\client\\\\src\\\\Components\\\\Blogs\\\\MessApps\\\\BodyOfArticles\\\\AnIntroIntoTestflightInternalTesting.js\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/styles'; // jss library\n\nimport { Typography, Link } from '@material-ui/core';\nimport img1 from '../../../../assets/img/blogs/messapps/an-intro-into-testflight-external-testing/1.jpg';\nimport img2 from '../../../../assets/img/blogs/messapps/an-intro-into-testflight-external-testing/2.jpg';\nimport img3 from '../../../../assets/img/blogs/messapps/an-intro-into-testflight-external-testing/3.jpg';\nimport img4 from '../../../../assets/img/blogs/messapps/an-intro-into-testflight-external-testing/4.jpg';\nimport img5 from '../../../../assets/img/blogs/messapps/an-intro-into-testflight-external-testing/5.jpg';\nimport img6 from '../../../../assets/img/blogs/messapps/an-intro-into-testflight-external-testing/6.jpg';\nimport img7 from '../../../../assets/img/blogs/messapps/an-intro-into-testflight-external-testing/7.jpg';\n\nvar jssStyle = function jssStyle(theme) {\n  return {\n    img: {\n      display: 'block',\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      marginBottom: '30px',\n      marginTop: '30px',\n      maxWidth: '90%'\n    },\n    blockQuote: {\n      background: '#f9f9f9',\n      borderLeft: '10px solid #ccc',\n      margin: '1.5em 10px !important',\n      padding: '0.5em 10px',\n      display: 'block',\n      quotes: \"'\\\"''\\\"''\\\"''\\\"'\",\n      '&::before': {\n        color: '#ccc',\n        content: 'open-quote',\n        fontSize: '4em',\n        lineHeight: '0.1em',\n        marginRight: '0.25em',\n        verticalAlign: '-0.4em'\n      }\n    },\n    center: {\n      textAlign: 'center'\n    }\n  };\n};\n\nvar AnIntroIntoTestflightExternalTesting = function AnIntroIntoTestflightExternalTesting(props) {\n  var classes = props.classes;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    paragraph: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"All data is invaluable to your app's success; hence, aggregating information about apps pre-release has become part of the norm. Two types of beta testing exists internal (closed) and external (open). Last time, we reviewed how to setup External Testing; now, let's focus on the \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Internal\"), \" alternative. If you need any help deciding which method of testing to use, click here and decide first before proceeding.\"), React.createElement(Typography, {\n    paragraph: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Last time, we reviewed the process of initiating Internal Testing; now, let\\u2019s focus on opening up your beta to \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"External Users.\")), React.createElement(Typography, {\n    variant: \"h5\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Prerequisites:\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    paragraph: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"An iTunes Connect Record\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    paragraph: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"A pre-uploaded build of your app\"))), React.createElement(Typography, {\n    variant: \"h4\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Let's get into it!\"), React.createElement(Typography, {\n    paragraph: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Login to your \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"iTunes Connect\"), \" page and select \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"My Apps:\")), React.createElement(\"img\", {\n    src: img1,\n    className: classes.img,\n    alt: \"Step 1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    paragraph: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Open the \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Activity\"), \" tab on the upper-most pane and scroll down to select the build to be tested; select the proper \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Version\"), \" and \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Build:\")), React.createElement(\"img\", {\n    src: img2,\n    className: classes.img,\n    alt: \"Step 2a\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: img3,\n    className: classes.img,\n    alt: \"Step 2b\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    paragraph: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Click Test Information and leave instructions for testers to follow in \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"What to Test\"), \". Provide other information for testers such as \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Beta App Description, Feedback Email,\"), \" and any other \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"URLs:\")), React.createElement(\"img\", {\n    src: img4,\n    className: classes.img,\n    alt: \"Step 3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    paragraph: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"To invite External testers, navigate back to your app in My Apps, select the TestFlight tab and click External Testing on the left-hand side. Then, click the (+) beside the header that readsExternal Testersand start adding users:\"), React.createElement(\"img\", {\n    src: img5,\n    className: classes.img,\n    alt: \"Step 4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    paragraph: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Check the box next to any eligible users who have not already been invited and click \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Add\"), \".\"), React.createElement(Typography, {\n    paragraph: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"NOTE 2000 invites is the current maximum capacity for External testing\"), React.createElement(Typography, {\n    paragraph: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"All Apple ID users are eligible to be an external tester\\u037E but first, you\\u2019ll need to submit information for and receive approval from a Beta App Review.\"), React.createElement(Typography, {\n    variant: \"h4\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"To submit a Beta App Review:\"), React.createElement(\"ol\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    paragraph: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Click \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Add Build to Test\"), \" from underneath the External Testing pane and select the build to be tested:\")), React.createElement(\"img\", {\n    src: img6,\n    className: classes.img,\n    alt: \"Step 1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    paragraph: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Select the build and click \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Add\"))), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    paragraph: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Enter in your Test information\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    paragraph: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Click \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Next\"))), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    paragraph: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Answer Export Compliance questionnaire and click \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Submit\")))), React.createElement(Typography, {\n    paragraph: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Upon approval, your build will be ready for testing; just click \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Start Testing\"), \" under the main \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"TestFlight\"), \" pane:\"), React.createElement(\"img\", {\n    src: img7,\n    className: classes.img,\n    alt: \"Final step\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    paragraph: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Emails will automatically be sent to those users you\\u2019ve added with both an attached invitation and a set of instructions for downloading the TestFlight App. And now, it\\u2019s up to the recipients to either accept or decline your invitation.\"));\n};\n\nexport default withStyles(jssStyle, {\n  withTheme: true\n})(AnIntroIntoTestflightExternalTesting);","map":{"version":3,"sources":["C:\\Users\\David\\Desktop\\resume_website_(git)\\client\\src\\Components\\Blogs\\MessApps\\BodyOfArticles\\AnIntroIntoTestflightInternalTesting.js"],"names":["React","withStyles","Typography","Link","img1","img2","img3","img4","img5","img6","img7","jssStyle","theme","img","display","marginLeft","marginRight","marginBottom","marginTop","maxWidth","blockQuote","background","borderLeft","margin","padding","quotes","color","content","fontSize","lineHeight","verticalAlign","center","textAlign","AnIntroIntoTestflightExternalTesting","props","classes","withTheme"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/styles'; // jss library\r\nimport {Typography, Link} from '@material-ui/core';\r\n\r\nimport img1 from '../../../../assets/img/blogs/messapps/an-intro-into-testflight-external-testing/1.jpg';\r\nimport img2 from '../../../../assets/img/blogs/messapps/an-intro-into-testflight-external-testing/2.jpg';\r\nimport img3 from '../../../../assets/img/blogs/messapps/an-intro-into-testflight-external-testing/3.jpg';\r\nimport img4 from '../../../../assets/img/blogs/messapps/an-intro-into-testflight-external-testing/4.jpg';\r\nimport img5 from '../../../../assets/img/blogs/messapps/an-intro-into-testflight-external-testing/5.jpg';\r\nimport img6 from '../../../../assets/img/blogs/messapps/an-intro-into-testflight-external-testing/6.jpg';\r\nimport img7 from '../../../../assets/img/blogs/messapps/an-intro-into-testflight-external-testing/7.jpg';\r\n\r\nconst jssStyle = theme => ({\r\n    img: {\r\n      display: 'block',\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n      marginBottom: '30px',\r\n      marginTop: '30px',\r\n      maxWidth: '90%'\r\n    },\r\n    blockQuote: {\r\n      background: '#f9f9f9',\r\n      borderLeft: '10px solid #ccc',\r\n      margin: '1.5em 10px !important',\r\n      padding: '0.5em 10px',\r\n      display: 'block',\r\n      quotes: `'\"''\"''\"''\"'`,\r\n      '&::before': {\r\n        color: '#ccc',\r\n        content: 'open-quote',\r\n        fontSize: '4em',\r\n        lineHeight: '0.1em',\r\n        marginRight: '0.25em',\r\n        verticalAlign: '-0.4em'\r\n      }\r\n    },\r\n    center: {\r\n        textAlign: 'center'\r\n    }\r\n})\r\n\r\nconst AnIntroIntoTestflightExternalTesting = (props) => {\r\n  const {classes} = props;\r\n  return (\r\n    <div>\r\n        <Typography paragraph>\r\n        All data is invaluable to your app's success; hence, aggregating information about apps pre-release has become part of the norm. Two types of beta testing exists internal (closed) and external (open). Last time, we reviewed how to setup External Testing; now, let's focus on the <strong>Internal</strong> alternative. If you need any help deciding which method of testing to use, click here and decide first before proceeding.\r\n        </Typography>\r\n        <Typography paragraph>\r\n        Last time, we reviewed the process of initiating Internal Testing; now, let’s focus on opening up your beta to <strong>External Users.</strong>\r\n        </Typography>\r\n        <Typography variant='h5' gutterBottom>\r\n            Prerequisites:\r\n        </Typography>\r\n        <ul>\r\n            <li>\r\n                <Typography paragraph>\r\n                    An iTunes Connect Record\r\n                </Typography>\r\n            </li>\r\n            <li>\r\n                <Typography paragraph>\r\n                    A pre-uploaded build of your app\r\n                </Typography>\r\n            </li>\r\n        </ul>\r\n        <Typography variant='h4' gutterBottom>\r\n            Let's get into it!\r\n        </Typography>\r\n        <Typography paragraph>\r\n            Login to your <strong>iTunes Connect</strong> page and select <strong>My Apps:</strong>\r\n        </Typography>\r\n        <img src={img1} className={classes.img} alt=\"Step 1\"/>\r\n        <Typography paragraph>\r\n            Open the <strong>Activity</strong> tab on the upper-most pane and scroll down to select the build to be tested; select the proper <strong>Version</strong> and <strong>Build:</strong>\r\n        </Typography>\r\n        <img src={img2} className={classes.img} alt=\"Step 2a\"/>\r\n        <img src={img3} className={classes.img} alt=\"Step 2b\"/>\r\n        <Typography paragraph>\r\n            Click Test Information and leave instructions for testers to follow in <strong>What to Test</strong>. Provide other information for testers such as <strong>Beta App Description, Feedback Email,</strong> and any other <strong>URLs:</strong>\r\n        </Typography>\r\n        <img src={img4} className={classes.img} alt=\"Step 3\"/>\r\n        <Typography paragraph>\r\n        To invite External testers, navigate back to your app in My Apps, select the TestFlight tab and click External Testing on the left-hand side. Then, click the (+) beside the header that readsExternal Testersand start adding users:\r\n        </Typography>\r\n        <img src={img5} className={classes.img} alt=\"Step 4\"/>\r\n        <Typography paragraph>\r\n        Check the box next to any eligible users who have not already been invited and click <strong>Add</strong>.</Typography>\r\n        <Typography paragraph>\r\n        NOTE 2000 invites is the current maximum capacity for External testing\r\n        </Typography>\r\n        <Typography paragraph>\r\n        All Apple ID users are eligible to be an external tester; but first, you’ll need to submit information for and receive approval from a Beta App Review. \r\n        </Typography>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n        To submit a Beta App Review:\r\n        </Typography>\r\n        <ol>\r\n            <li>\r\n                <Typography paragraph>Click <strong>Add Build to Test</strong> from underneath the External Testing pane and select the build to be tested:</Typography>\r\n            </li>\r\n            <img src={img6} className={classes.img} alt=\"Step 1\"/>\r\n            <li>\r\n                <Typography paragraph>Select the build and click <strong>Add</strong></Typography>\r\n            </li>\r\n            <li>\r\n                <Typography paragraph>Enter in your Test information</Typography>\r\n            </li>\r\n            <li>\r\n                <Typography paragraph>Click <strong>Next</strong></Typography>\r\n            </li>\r\n            <li>\r\n                <Typography paragraph>Answer Export Compliance questionnaire and click <strong>Submit</strong></Typography>\r\n            </li>\r\n        </ol>\r\n        <Typography paragraph>Upon approval, your build will be ready for testing; just click <strong>Start Testing</strong> under the main <strong>TestFlight</strong> pane:</Typography>\r\n        <img src={img7} className={classes.img} alt=\"Final step\"/>\r\n        <Typography paragraph>Emails will automatically be sent to those users you’ve added with both an attached invitation and a set of instructions for downloading the TestFlight App. \r\n        And now, it’s up to the recipients to either accept or decline your invitation.\r\n        </Typography>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withStyles(jssStyle, {withTheme: true})(AnIntroIntoTestflightExternalTesting)\r\n"]},"metadata":{},"sourceType":"module"}