{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\David\\\\Desktop\\\\resume_website_(git)\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\David\\\\Desktop\\\\resume_website_(git)\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\David\\\\Desktop\\\\resume_website_(git)\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\David\\\\Desktop\\\\resume_website_(git)\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\David\\\\Desktop\\\\resume_website_(git)\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\David\\\\Desktop\\\\resume_website_(git)\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\resume_website_(git)\\\\client\\\\src\\\\Containers\\\\ColorPicker.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Drawer, Button, Grid, Tooltip } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport { red, pink, purple, deepPurple, indigo, blue, lightBlue, cyan, teal, green, lightGreen, lime, yellow, amber, orange, deepOrange } from '@material-ui/core/colors';\nimport { MdColorLens } from \"react-icons/md\";\n\nvar jssStyle = function jssStyle(theme) {\n  return {\n    buttonContainer: {\n      position: 'fixed',\n      right: '-3px',\n      top: '30%',\n      height: 'auto',\n      zIndex: '1101'\n    },\n    drawerPaper: {\n      height: '184px !important',\n      textAlign: 'center',\n      width: '150px',\n      top: '30% !important',\n      // alignItems: 'center',\n      padding: '10px'\n    },\n    paletteIcon: {\n      width: '20px',\n      height: 'auto',\n      fontSize: '30px',\n      color: theme.palette.primary['500']\n    },\n    innerDrawerColor: {\n      width: '9px',\n      height: '35px',\n      content: '\" \"',\n      display: 'inline',\n      cursor: 'pointer'\n    },\n    tooltipPopper: {\n      height: '40px !important'\n    },\n    paletteButton: {\n      content: \"' '\",\n      width: '100%',\n      backgroundColor: 'white'\n    }\n  };\n};\n\nvar palette = {\n  'Red': red,\n  'Pink': pink,\n  'Purple': purple,\n  'Deep Purple': deepPurple,\n  'Indigo': indigo,\n  'Blue': blue,\n  'Light Blue': lightBlue,\n  'Cyan': cyan,\n  'Teal': teal,\n  'Green': green,\n  'Light Green': lightGreen,\n  'Lime': lime,\n  'Yellow': yellow,\n  'Amber': amber,\n  'Orange': orange,\n  'Deep Orange': deepOrange\n};\n\nvar ColorPicker =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ColorPicker, _Component);\n\n  function ColorPicker() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ColorPicker);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ColorPicker)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      right: false\n    };\n\n    _this.toggleDrawer = function (side, open) {\n      _this.setState(_defineProperty({}, side, open));\n    };\n\n    _this.generateInnerDrawerColors = function () {\n      return Object.keys(palette).map(function (colorName, index) {\n        var color500 = palette[colorName][500];\n        var color = palette[colorName];\n        return React.createElement(Tooltip, {\n          key: index,\n          leaveDelay: 100,\n          title: colorName,\n          placement: \"top\",\n          classes: {\n            popper: _this.props.classes.tooltipPopper\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          xs: 3,\n          role: \"button\",\n          onClick: function onClick() {\n            _this.toggleDrawer('right', false);\n\n            _this.props.changeColor(color);\n          },\n          onKeyDown: function onKeyDown() {\n            _this.toggleDrawer('right', false);\n\n            _this.props.changeColor(color);\n          },\n          style: {\n            backgroundColor: color500\n          },\n          className: _this.props.classes.innerDrawerColor,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }));\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ColorPicker, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: this.props.classes.buttonContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Button, {\n        style: {\n          backgroundColor: 'white',\n          border: 'solid 1.2px #e0e0e0'\n        },\n        onClick: function onClick() {\n          return _this2.toggleDrawer('right', true);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(MdColorLens, {\n        className: this.props.classes.paletteIcon,\n        style: {\n          fontSize: '23px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }))), React.createElement(Drawer, {\n        anchor: \"right\",\n        open: this.state.right,\n        onClose: function onClose() {\n          return _this2.toggleDrawer('right', false);\n        },\n        classes: {\n          paper: this.props.classes.drawerPaper\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(MdColorLens, {\n        style: {\n          padding: '10px'\n        },\n        className: this.props.classes.paletteIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, this.generateInnerDrawerColors())));\n    }\n  }]);\n\n  return ColorPicker;\n}(Component);\n\nexport default withStyles(jssStyle)(ColorPicker);","map":{"version":3,"sources":["C:\\Users\\David\\Desktop\\resume_website_(git)\\client\\src\\Containers\\ColorPicker.js"],"names":["React","Component","Fragment","Drawer","Button","Grid","Tooltip","withStyles","red","pink","purple","deepPurple","indigo","blue","lightBlue","cyan","teal","green","lightGreen","lime","yellow","amber","orange","deepOrange","MdColorLens","jssStyle","theme","buttonContainer","position","right","top","height","zIndex","drawerPaper","textAlign","width","padding","paletteIcon","fontSize","color","palette","primary","innerDrawerColor","content","display","cursor","tooltipPopper","paletteButton","backgroundColor","ColorPicker","state","toggleDrawer","side","open","setState","generateInnerDrawerColors","Object","keys","map","colorName","index","color500","popper","props","classes","changeColor","border","paper"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react'\r\nimport {Drawer, Button, Grid, Tooltip} from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport { red, pink, purple, deepPurple, indigo, blue, lightBlue, cyan, teal, green, lightGreen, lime, yellow, amber, orange, deepOrange } from '@material-ui/core/colors'\r\n\r\nimport { MdColorLens } from \"react-icons/md\"\r\n\r\nconst jssStyle = theme => ({\r\n  buttonContainer: {\r\n    position: 'fixed',\r\n    right: '-3px',\r\n    top: '30%',\r\n    height: 'auto',\r\n    zIndex: '1101'\r\n  },\r\n  drawerPaper: {\r\n    height: '184px !important',\r\n    textAlign: 'center',\r\n    width: '150px',\r\n    top: '30% !important',\r\n    // alignItems: 'center',\r\n    padding: '10px'\r\n  }, \r\n  paletteIcon: {\r\n    width: '20px',\r\n    height: 'auto',\r\n    fontSize: '30px',\r\n    color: theme.palette.primary['500']\r\n  },\r\n  innerDrawerColor: {\r\n    width: '9px',\r\n    height: '35px',\r\n    content: '\" \"',\r\n    display: 'inline',\r\n    cursor: 'pointer'\r\n  },\r\n  tooltipPopper: {\r\n    height: '40px !important'\r\n  },\r\n  paletteButton: {\r\n    content: \"' '\",\r\n    width: '100%',\r\n    backgroundColor: 'white'\r\n  }\r\n})\r\n\r\nconst palette = {\r\n  'Red': red,\r\n  'Pink': pink,\r\n  'Purple': purple,\r\n  'Deep Purple': deepPurple,\r\n  'Indigo': indigo,\r\n  'Blue': blue,\r\n  'Light Blue': lightBlue,\r\n  'Cyan': cyan,\r\n  'Teal': teal,\r\n  'Green': green,\r\n  'Light Green': lightGreen,\r\n  'Lime': lime,\r\n  'Yellow': yellow,\r\n  'Amber': amber,\r\n  'Orange': orange,\r\n  'Deep Orange': deepOrange\r\n} \r\n\r\nclass ColorPicker extends Component {\r\n\r\n  state = {\r\n    right: false\r\n  };\r\n\r\n  toggleDrawer = (side, open) => {\r\n    this.setState({\r\n      [side]: open\r\n    })\r\n  };\r\n  \r\n  generateInnerDrawerColors = () => {\r\n    return Object.keys(palette).map((colorName, index) => {\r\n      let color500 = palette[colorName][500]\r\n      let color = palette[colorName]\r\n      \r\n      return (\r\n        <Tooltip \r\n          key={index} \r\n          leaveDelay={100} \r\n          title={colorName}\r\n           placement='top'\r\n           classes={{ popper: this.props.classes.tooltipPopper }} >\r\n          <Grid \r\n            item xs={3}\r\n            role=\"button\"\r\n            onClick={() => {this.toggleDrawer('right', false); this.props.changeColor(color);}}\r\n            onKeyDown={() => {this.toggleDrawer('right', false); this.props.changeColor(color);}}\r\n            style={{backgroundColor: color500}}\r\n            className={this.props.classes.innerDrawerColor}\r\n            >\r\n            {/* <Tooltip leaveDelay={100} title=\"COLOR\" placement='top' color={color}></Tooltip> */}\r\n          </Grid>\r\n        </Tooltip>\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className={this.props.classes.buttonContainer}>\r\n            {/* <button onClick={() => props.changeColor(red)}>test</button> */}\r\n            <Button style={{backgroundColor: 'white', border: 'solid 1.2px #e0e0e0'}} onClick={() => this.toggleDrawer('right', true)}>\r\n              <MdColorLens className={this.props.classes.paletteIcon} style={{fontSize: '23px'}}></MdColorLens>\r\n            </Button>\r\n        </div>\r\n        <Drawer\r\n          anchor=\"right\" \r\n          open={this.state.right} \r\n          onClose={() => this.toggleDrawer('right', false)}\r\n          classes={{\r\n            paper: this.props.classes.drawerPaper\r\n          }}>\r\n          <div>\r\n            <MdColorLens style={{padding: '10px'}} className={this.props.classes.paletteIcon}></MdColorLens>\r\n          </div>\r\n          <Grid container>\r\n          {\r\n            this.generateInnerDrawerColors()\r\n          }\r\n          </Grid>\r\n      </Drawer>\r\n    </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(jssStyle)(ColorPicker)"]},"metadata":{},"sourceType":"module"}