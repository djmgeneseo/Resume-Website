{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\resume_website_(git)\\\\client\\\\src\\\\Components\\\\FrontPage\\\\AchievementCard.js\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/styles'; // jss library\n\nimport { Paper, Typography } from '@material-ui/core';\n\nvar jssStyle = function jssStyle(theme) {\n  return {\n    paper: {\n      position: 'relative',\n      padding: '30px',\n      boxSizing: 'border-box'\n    },\n    certificateIconDiv: {\n      position: 'absolute',\n      top: '-10px',\n      right: '20px',\n      width: '30px',\n      height: 'auto',\n      '& img': {\n        width: '70px',\n        height: 'auto',\n        boxShadow: '0px 3px 5px -1px rgba(0,0,0,0.2), 0px 6px 10px 0px rgba(0,0,0,0.14), 0px 1px 18px 0px rgba(0,0,0,0.12)',\n        borderRadius: '50%'\n      }\n    },\n    timePeriodParagraph: {\n      color: '#fff !important'\n    },\n    timePeriodDiv: {\n      backgroundColor: theme.palette.primary['500'],\n      color: '#fff !important',\n      display: 'inline-block',\n      padding: '3px 15px',\n      position: 'relative',\n      margin: '13px 0px',\n      boxShadow: '0px 3px 5px -1px rgba(0,0,0,0.2), 0px 6px 10px 0px rgba(0,0,0,0.14), 0px 1px 18px 0px rgba(0,0,0,0.12)',\n      '&:before': {\n        content: \"''\",\n        position: 'absolute',\n        background: 'transparent',\n        display: 'inline-block',\n        right: '0',\n        width: '0',\n        height: '0',\n        top: '-10px',\n        border: '10px solid',\n        borderRightColor: 'transparent',\n        borderTopColor: 'transparent',\n        borderBottomColor: 'transparent',\n        borderLeftColor: theme.palette.primary['500'],\n        transform: 'rotate(180deg)'\n      }\n    },\n    adjacentToDate: {\n      display: 'inline',\n      marginLeft: '10px'\n    },\n    achievementLogoContainer: {\n      height: '90px',\n      margin: '5%',\n      float: 'right',\n      maxWidth: '50%'\n    },\n    achievementLogoImage: {\n      maxWidth: '100%',\n      maxHeight: '100%'\n    },\n    '@media only screen and (max-width: 1300px)': {}\n  };\n};\n/**\r\n * Props: \r\n * @param {json}       classes\r\n * @param {json}       theme\r\n * @param {string}     achievementAffiliation - Displayed above the achievement title; top-most writing\r\n * @param {string}     achievement - The card's title\r\n * @param {string}     marginBottom - OPTIONAL - may be necessary, depending on card's location in grid\r\n * @param {string}     year - Displayed on the ribbon component\r\n * @param {jsx/string} adjacentToDate - OPTIONAL\r\n * @param {image}      icon - Displayed on the card's upper-right-most corner (outside & overlaying)\r\n * @param {image}      logo - OPTIONAL - Displayed inside the card's upper-right section (with padding)\r\n * @param {jsx}        children - OPTIONAL - Text beneath all other features on card\r\n */\n\n\nvar AchievementCard = function AchievementCard(props) {\n  var classes = props.classes;\n\n  var generateAdjacentToDate = function generateAdjacentToDate() {\n    if (props.adjacentToDate) {\n      return React.createElement(\"div\", {\n        className: classes.adjacentToDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, props.adjacentToDate);\n    }\n  };\n\n  var generateLogo = function generateLogo() {\n    if (props.logo) {\n      return React.createElement(\"div\", {\n        className: classes.achievementLogoContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: classes.achievementLogoImage,\n        src: props.logo,\n        alt: \"Achievement logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }));\n    }\n  };\n\n  return React.createElement(Paper, {\n    className: classes.paper,\n    style: props.marginBottom ? {\n      marginBottom: props.marginBottom\n    } : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.certificateIconDiv,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"Achievement icon\",\n    src: props.icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, props.achievementAffiliation), generateLogo(), React.createElement(Typography, {\n    color: \"inherit\",\n    variant: 'h5',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, props.achievement), React.createElement(\"div\", {\n    className: classes.timePeriodDiv,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    color: \"inherit\",\n    variant: 'body2',\n    className: classes.timePeriodParagraph,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, props.year)), generateAdjacentToDate(), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, props.children));\n};\n\nexport default withStyles(jssStyle)(AchievementCard);","map":{"version":3,"sources":["C:\\Users\\David\\Desktop\\resume_website_(git)\\client\\src\\Components\\FrontPage\\AchievementCard.js"],"names":["React","withStyles","Paper","Typography","jssStyle","theme","paper","position","padding","boxSizing","certificateIconDiv","top","right","width","height","boxShadow","borderRadius","timePeriodParagraph","color","timePeriodDiv","backgroundColor","palette","primary","display","margin","content","background","border","borderRightColor","borderTopColor","borderBottomColor","borderLeftColor","transform","adjacentToDate","marginLeft","achievementLogoContainer","float","maxWidth","achievementLogoImage","maxHeight","AchievementCard","props","classes","generateAdjacentToDate","generateLogo","logo","marginBottom","icon","achievementAffiliation","achievement","year","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,qBAA3B,C,CAAkD;;AAElD,SAASC,KAAT,EAAeC,UAAf,QAAgC,mBAAhC;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK;AAAA,SAAK;AACvBC,IAAAA,KAAK,EAAE;AACHC,MAAAA,QAAQ,EAAE,UADP;AAEHC,MAAAA,OAAO,EAAE,MAFN;AAGHC,MAAAA,SAAS,EAAE;AAHR,KADgB;AAMvBC,IAAAA,kBAAkB,EAAE;AAChBH,MAAAA,QAAQ,EAAE,UADM;AAEhBI,MAAAA,GAAG,EAAE,OAFW;AAGhBC,MAAAA,KAAK,EAAE,MAHS;AAIhBC,MAAAA,KAAK,EAAE,MAJS;AAKhBC,MAAAA,MAAM,EAAE,MALQ;AAMhB,eAAS;AACLD,QAAAA,KAAK,EAAE,MADF;AAELC,QAAAA,MAAM,EAAE,MAFH;AAGLC,QAAAA,SAAS,EAAE,wGAHN;AAILC,QAAAA,YAAY,EAAE;AAJT;AANO,KANG;AAmBvBC,IAAAA,mBAAmB,EAAE;AACjBC,MAAAA,KAAK,EAAE;AADU,KAnBE;AAsBvBC,IAAAA,aAAa,EAAE;AACXC,MAAAA,eAAe,EAAEf,KAAK,CAACgB,OAAN,CAAcC,OAAd,CAAsB,KAAtB,CADN;AAEXJ,MAAAA,KAAK,EAAE,iBAFI;AAGXK,MAAAA,OAAO,EAAE,cAHE;AAIXf,MAAAA,OAAO,EAAE,UAJE;AAKXD,MAAAA,QAAQ,EAAE,UALC;AAMXiB,MAAAA,MAAM,EAAE,UANG;AAOXT,MAAAA,SAAS,EAAE,wGAPA;AAQX,kBAAY;AACVU,QAAAA,OAAO,EAAE,IADC;AAEVlB,QAAAA,QAAQ,EAAE,UAFA;AAGVmB,QAAAA,UAAU,EAAE,aAHF;AAIVH,QAAAA,OAAO,EAAE,cAJC;AAKVX,QAAAA,KAAK,EAAE,GALG;AAMVC,QAAAA,KAAK,EAAE,GANG;AAOVC,QAAAA,MAAM,EAAE,GAPE;AAQVH,QAAAA,GAAG,EAAE,OARK;AASVgB,QAAAA,MAAM,EAAE,YATE;AAUVC,QAAAA,gBAAgB,EAAE,aAVR;AAWVC,QAAAA,cAAc,EAAE,aAXN;AAYVC,QAAAA,iBAAiB,EAAE,aAZT;AAaVC,QAAAA,eAAe,EAAE1B,KAAK,CAACgB,OAAN,CAAcC,OAAd,CAAsB,KAAtB,CAbP;AAcVU,QAAAA,SAAS,EAAE;AAdD;AARD,KAtBQ;AA+CvBC,IAAAA,cAAc,EAAE;AACZV,MAAAA,OAAO,EAAE,QADG;AAEZW,MAAAA,UAAU,EAAE;AAFA,KA/CO;AAmDvBC,IAAAA,wBAAwB,EAAE;AACtBrB,MAAAA,MAAM,EAAE,MADc;AAEtBU,MAAAA,MAAM,EAAE,IAFc;AAGtBY,MAAAA,KAAK,EAAE,OAHe;AAItBC,MAAAA,QAAQ,EAAE;AAJY,KAnDH;AAyDvBC,IAAAA,oBAAoB,EAAE;AAClBD,MAAAA,QAAQ,EAAE,MADQ;AAElBE,MAAAA,SAAS,EAAE;AAFO,KAzDC;AA6DvB,kDAA8C;AA7DvB,GAAL;AAAA,CAAtB;AAkEA;;;;;;;;;;;;;;;AAcA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAAA,MAC1BC,OAD0B,GACfD,KADe,CAC1BC,OAD0B;;AAGjC,MAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;AACnC,QAAGF,KAAK,CAACR,cAAT,EAAyB;AACrB,aAAO;AAAK,QAAA,SAAS,EAAES,OAAO,CAACT,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyCQ,KAAK,CAACR,cAA/C,CAAP;AACH;AACF,GAJD;;AAMA,MAAMW,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,QAAGH,KAAK,CAACI,IAAT,EAAe;AACX,aAAO;AAAK,QAAA,SAAS,EAAEH,OAAO,CAACP,wBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACP;AAAK,QAAA,SAAS,EAAEO,OAAO,CAACJ,oBAAxB;AAA8C,QAAA,GAAG,EAAEG,KAAK,CAACI,IAAzD;AAA+D,QAAA,GAAG,EAAC,kBAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADO,CAAP;AAGH;AACF,GAND;;AAQA,SACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEH,OAAO,CAACpC,KAA1B;AAAiC,IAAA,KAAK,EAAEmC,KAAK,CAACK,YAAN,GAAqB;AAACA,MAAAA,YAAY,EAAEL,KAAK,CAACK;AAArB,KAArB,GAA0D,IAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAAChC,kBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAC,kBAAT;AAA4B,IAAA,GAAG,EAAE+B,KAAK,CAACM,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADF,EAIE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BN,KAAK,CAACO,sBAAnC,CAJF,EAKIJ,YAAY,EALhB,EAME,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,SAAlB;AAA4B,IAAA,OAAO,EAAE,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4CH,KAAK,CAACQ,WAAlD,CANF,EAOE;AAAK,IAAA,SAAS,EAAEP,OAAO,CAACvB,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,SAAlB;AAA4B,IAAA,OAAO,EAAE,OAArC;AAA8C,IAAA,SAAS,EAAEuB,OAAO,CAACzB,mBAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuFwB,KAAK,CAACS,IAA7F,CADJ,CAPF,EAUIP,sBAAsB,EAV1B,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,KAAK,CAACU,QADX,CAXF,CADJ;AAiBD,CAlCD;;AAoCA,eAAelD,UAAU,CAACG,QAAD,CAAV,CAAqBoC,eAArB,CAAf","sourcesContent":["import React from 'react';\r\nimport { withStyles } from '@material-ui/styles'; // jss library\r\n\r\nimport { Paper,Typography} from '@material-ui/core';\r\n\r\nconst jssStyle = theme => ({\r\n    paper: {\r\n        position: 'relative',\r\n        padding: '30px',\r\n        boxSizing: 'border-box'\r\n    },\r\n    certificateIconDiv: {\r\n        position: 'absolute',\r\n        top: '-10px',\r\n        right: '20px',\r\n        width: '30px',\r\n        height: 'auto',\r\n        '& img': {\r\n            width: '70px',\r\n            height: 'auto',\r\n            boxShadow: '0px 3px 5px -1px rgba(0,0,0,0.2), 0px 6px 10px 0px rgba(0,0,0,0.14), 0px 1px 18px 0px rgba(0,0,0,0.12)',\r\n            borderRadius: '50%'\r\n        }\r\n    },\r\n    timePeriodParagraph: {\r\n        color: '#fff !important'\r\n    },\r\n    timePeriodDiv: {\r\n        backgroundColor: theme.palette.primary['500'],\r\n        color: '#fff !important',\r\n        display: 'inline-block',\r\n        padding: '3px 15px',\r\n        position: 'relative',\r\n        margin: '13px 0px',\r\n        boxShadow: '0px 3px 5px -1px rgba(0,0,0,0.2), 0px 6px 10px 0px rgba(0,0,0,0.14), 0px 1px 18px 0px rgba(0,0,0,0.12)',\r\n        '&:before': {\r\n          content: \"''\",\r\n          position: 'absolute',\r\n          background: 'transparent',\r\n          display: 'inline-block',\r\n          right: '0',\r\n          width: '0',\r\n          height: '0',\r\n          top: '-10px',\r\n          border: '10px solid',\r\n          borderRightColor: 'transparent',\r\n          borderTopColor: 'transparent',\r\n          borderBottomColor: 'transparent',\r\n          borderLeftColor: theme.palette.primary['500'],\r\n          transform: 'rotate(180deg)'\r\n        }\r\n    },\r\n    adjacentToDate: {\r\n        display: 'inline',\r\n        marginLeft: '10px'\r\n    },\r\n    achievementLogoContainer: {\r\n        height: '90px',\r\n        margin: '5%',\r\n        float: 'right',\r\n        maxWidth: '50%'\r\n    },\r\n    achievementLogoImage: {\r\n        maxWidth: '100%',\r\n        maxHeight: '100%'\r\n    },\r\n    '@media only screen and (max-width: 1300px)': {\r\n\r\n    }\r\n})\r\n\r\n/**\r\n * Props: \r\n * @param {json}       classes\r\n * @param {json}       theme\r\n * @param {string}     achievementAffiliation - Displayed above the achievement title; top-most writing\r\n * @param {string}     achievement - The card's title\r\n * @param {string}     marginBottom - OPTIONAL - may be necessary, depending on card's location in grid\r\n * @param {string}     year - Displayed on the ribbon component\r\n * @param {jsx/string} adjacentToDate - OPTIONAL\r\n * @param {image}      icon - Displayed on the card's upper-right-most corner (outside & overlaying)\r\n * @param {image}      logo - OPTIONAL - Displayed inside the card's upper-right section (with padding)\r\n * @param {jsx}        children - OPTIONAL - Text beneath all other features on card\r\n */\r\n\r\nconst AchievementCard = (props) => {\r\n  const {classes} = props;\r\n\r\n  const generateAdjacentToDate = () => {\r\n    if(props.adjacentToDate) {\r\n        return <div className={classes.adjacentToDate}>{props.adjacentToDate}</div>\r\n    }\r\n  }\r\n\r\n  const generateLogo = () => {\r\n    if(props.logo) {\r\n        return <div className={classes.achievementLogoContainer}>\r\n        <img className={classes.achievementLogoImage} src={props.logo} alt=\"Achievement logo\"/>\r\n    </div>\r\n    }\r\n  }\r\n\r\n  return (\r\n      <Paper className={classes.paper} style={props.marginBottom ? {marginBottom: props.marginBottom} : null}>\r\n        <div className={classes.certificateIconDiv}>\r\n            <img alt='Achievement icon' src={props.icon}/>\r\n        </div>\r\n        <Typography color=\"inherit\">{props.achievementAffiliation}</Typography>\r\n        { generateLogo() }\r\n        <Typography color=\"inherit\" variant={'h5'}>{props.achievement}</Typography>\r\n        <div className={classes.timePeriodDiv}>\r\n            <Typography color=\"inherit\" variant={'body2'} className={classes.timePeriodParagraph}>{props.year}</Typography>\r\n        </div>\r\n        { generateAdjacentToDate() }\r\n        <div>\r\n            {props.children}\r\n        </div>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default withStyles(jssStyle)(AchievementCard)\r\n"]},"metadata":{},"sourceType":"module"}