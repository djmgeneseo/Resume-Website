{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\David\\\\Desktop\\\\resume_website_(git)\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\resume_website_(git)\\\\client\\\\src\\\\Components\\\\Layouts\\\\Abilities.js\";\nimport React, { Fragment } from 'react';\nimport { withStyles } from '@material-ui/styles'; // jss library\n\nimport { Grid, Typography } from '@material-ui/core';\nimport { MdStar, MdStarBorder } from 'react-icons/md';\n\nvar jssStyle = function jssStyle(theme) {\n  return {\n    sectionBackground: {\n      backgroundColor: 'rgb(252,252,252)',\n      width: '100%',\n      height: 'auto',\n      padding: '10px 0px'\n    },\n    siteContainer: {\n      margin: '75px auto',\n      maxWidth: '1280px',\n      padding: '10px'\n    },\n    heading: {\n      textAlign: 'center',\n      width: '100%',\n      marginBottom: '25px'\n    },\n    headerShadow: {\n      '& img': {\n        marginBottom: '15px',\n        width: '100%'\n      }\n    },\n    subHeading: {\n      textAlign: 'left',\n      width: '100%',\n      margin: '10px 0'\n    },\n    columnLeftFormat: {\n      boxSizing: 'border-box',\n      paddingRight: '15px'\n    },\n    columnRightFormat: {\n      boxSizing: 'border-box',\n      paddingLeft: '15px'\n    },\n    starsSpan: {\n      color: theme.palette.primary['500']\n    },\n    '@media only screen and (max-width: 959px)': {\n      columnRightFormat: {\n        paddingLeft: '0px'\n      },\n      columnLeftFormat: {\n        paddingRight: '0px'\n      }\n    }\n  };\n}; // TODO: reverse key/value pairing\n\n\nvar skillsJSON = {\n  5: ['JavaScript (ES5, 6, & 7)', 'HTML(5)', 'CSS(3)', 'JSON', 'Git', 'Bootstrap Framework', 'Material-UI Framework', 'Object Oriented Programming'],\n  4: ['React', 'React-Bootstrap Framework', 'Swift', 'JQuery', 'MVC Pattern', 'CRUD Paradigm', 'REST Architecture', 'NoSQL', 'SQL'],\n  3: ['MySQL', 'Node.js', 'Java', 'PHP'],\n  2: ['R'],\n  1: ['Laravel Framework']\n};\nvar toolsJSON = {\n  5: ['Android Studio', 'Xcode', 'Visual Studio Code', 'Brackets', 'Firestore', 'Firebase', 'Microsoft IIS', 'NPM'],\n  4: ['CocoaPods (MacOS Package Manager)', 'Eclipse', 'Ingenuix CMS'],\n  3: ['Eclipse', 'MongoDB', 'Google Analytics', 'R Studios', 'ODBC'],\n  2: ['LDAP', 'Visual Studio 2017'],\n  1: ['DynamoDB']\n};\n\nvar randomString = function randomString(length) {\n  return Math.round(Math.pow(36, length + 1) - Math.random() * Math.pow(36, length)).toString(36).slice(1);\n};\n\nvar Abilities = function Abilities(props) {\n  var classes = props.classes;\n  /**\r\n   * \r\n   * @param {number} filledStarsAmt - amount of stars (propably out of 5)\r\n   * @param {number} emptyStarsAmt - unfilled stars (probably out of 5)\r\n   * @returns {jsx}\r\n   */\n\n  var generateStars = function generateStars(filledStarsAmt, emptyStarsAmt) {\n    var jsx = [];\n\n    while (filledStarsAmt > 0) {\n      jsx.push(React.createElement(MdStar, {\n        key: randomString(10),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }));\n      filledStarsAmt--;\n    }\n\n    while (emptyStarsAmt > 0) {\n      jsx.push(React.createElement(MdStarBorder, {\n        key: randomString(10),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }));\n      emptyStarsAmt--;\n    }\n\n    return jsx.map(function (star) {\n      return star;\n    });\n  };\n  /**\r\n   * \r\n   * @param {object} abilityJSON - Each value is an array\r\n   * @returns {number}\r\n   */\n\n\n  var findAbilityJsonLength = function findAbilityJsonLength(abilityJSON) {\n    var length = 0;\n    Object.keys(abilityJSON).forEach(function (key) {\n      length += abilityJSON[key].length;\n    });\n    return length;\n  };\n  /**\r\n   * \r\n   * @param {object} abilityJSON - An object of number:arrays pairs\r\n   */\n\n\n  var generateAbilityCategoryRow = function generateAbilityCategoryRow(abilityJSON) {\n    var halfwayMark = Math.ceil(findAbilityJsonLength(abilityJSON) / 2);\n    var combinedArrayOfAllAbilites = []; // package abilities into individual objects, and then combine those objects into a singular array. The length of abilityJSON = the max rating for each individual ability.\n\n    var _loop = function _loop(i) {\n      // decrement\n      combinedArrayOfAllAbilites.push.apply(combinedArrayOfAllAbilites, _toConsumableArray(abilityJSON[i].map(function (abilityName) {\n        // map returns an array, but the '...' spread operator returns each element of that array\n        var temp = {};\n        temp[i] = abilityName;\n        return temp;\n      })));\n    };\n\n    for (var i = Object.keys(abilityJSON).length; i > 0; i--) {\n      _loop(i);\n    } // divide array into left and right columns from the 'halfwayMark' index\n\n\n    var leftColArr = combinedArrayOfAllAbilites.splice(0, halfwayMark);\n    var rightColArr = combinedArrayOfAllAbilites;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 6,\n      className: classes.columnLeftFormat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, leftColArr.map(function (abilityObject) {\n      var amtOfStars = Object.keys(abilityObject);\n      var abilityName = abilityObject[Object.keys(abilityObject)];\n      return React.createElement(Typography, {\n        key: randomString(10),\n        variant: \"body1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, abilityName, \" \", React.createElement(\"span\", {\n        className: classes.starsSpan,\n        style: {\n          float: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, generateStars(amtOfStars, 5 - amtOfStars)));\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 6,\n      className: classes.columnRightFormat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, rightColArr.map(function (abilityObject) {\n      var amtOfStars = Object.keys(abilityObject);\n      var abilityName = abilityObject[Object.keys(abilityObject)];\n      return React.createElement(Typography, {\n        key: randomString(10),\n        variant: \"body1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, abilityName, \" \", React.createElement(\"span\", {\n        className: classes.starsSpan,\n        style: {\n          float: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, generateStars(amtOfStars, 5 - amtOfStars)));\n    })));\n  };\n\n  return React.createElement(\"section\", {\n    className: classes.sectionBackground,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    className: classes.siteContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.heading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"ABILITIES\")), React.createElement(\"div\", {\n    className: classes.headerShadow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"section header shadow\",\n    src: require('../../assets/img/section_header_shadow.png'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.subHeading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"Skills\")), generateAbilityCategoryRow(skillsJSON), React.createElement(\"div\", {\n    className: classes.subHeading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"Tools\")), generateAbilityCategoryRow(toolsJSON)));\n};\n\nexport default withStyles(jssStyle, {\n  withTheme: true\n})(Abilities);","map":{"version":3,"sources":["C:\\Users\\David\\Desktop\\resume_website_(git)\\client\\src\\Components\\Layouts\\Abilities.js"],"names":["React","Fragment","withStyles","Grid","Typography","MdStar","MdStarBorder","jssStyle","theme","sectionBackground","backgroundColor","width","height","padding","siteContainer","margin","maxWidth","heading","textAlign","marginBottom","headerShadow","subHeading","columnLeftFormat","boxSizing","paddingRight","columnRightFormat","paddingLeft","starsSpan","color","palette","primary","skillsJSON","toolsJSON","randomString","length","Math","round","pow","random","toString","slice","Abilities","props","classes","generateStars","filledStarsAmt","emptyStarsAmt","jsx","push","map","star","findAbilityJsonLength","abilityJSON","Object","keys","forEach","key","generateAbilityCategoryRow","halfwayMark","ceil","combinedArrayOfAllAbilites","i","abilityName","temp","leftColArr","splice","rightColArr","abilityObject","amtOfStars","float","require","withTheme"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react'\r\nimport { withStyles } from '@material-ui/styles'; // jss library\r\n\r\nimport {Grid, Typography} from '@material-ui/core';\r\nimport {MdStar, MdStarBorder} from 'react-icons/md';\r\n\r\nconst jssStyle = (theme) => ({\r\n  sectionBackground: {\r\n    backgroundColor: 'rgb(252,252,252)',\r\n    width: '100%',\r\n    height: 'auto',\r\n    padding: '10px 0px'\r\n  },\r\n  siteContainer: {\r\n    margin: '75px auto',\r\n    maxWidth: '1280px',\r\n    padding: '10px'\r\n  },\r\n  heading: {\r\n    textAlign: 'center',\r\n    width: '100%',\r\n    marginBottom: '25px'\r\n  },\r\n  headerShadow: {\r\n    '& img': {\r\n      marginBottom: '15px',\r\n      width: '100%'\r\n    }\r\n  },\r\n  subHeading: {\r\n    textAlign: 'left',\r\n    width: '100%',\r\n    margin: '10px 0'\r\n  },\r\n  columnLeftFormat: {\r\n    boxSizing: 'border-box', \r\n    paddingRight: '15px'\r\n  },\r\n  columnRightFormat: {\r\n    boxSizing: 'border-box',\r\n    paddingLeft: '15px'\r\n  },\r\n  starsSpan: {\r\n    color: theme.palette.primary['500']\r\n  },\r\n  '@media only screen and (max-width: 959px)': {\r\n    columnRightFormat: {\r\n      paddingLeft: '0px'\r\n    },\r\n    columnLeftFormat: {\r\n      paddingRight: '0px'\r\n    }\r\n  }\r\n})\r\n\r\n// TODO: reverse key/value pairing\r\nconst skillsJSON = {\r\n  5: ['JavaScript (ES5, 6, & 7)','HTML(5)','CSS(3)','JSON','Git','Bootstrap Framework','Material-UI Framework','Object Oriented Programming'],\r\n  4: ['React','React-Bootstrap Framework','Swift','JQuery','MVC Pattern','CRUD Paradigm','REST Architecture','NoSQL','SQL'],\r\n  3: ['MySQL','Node.js','Java','PHP'],\r\n  2: ['R'],\r\n  1: ['Laravel Framework']\r\n}\r\n\r\nconst toolsJSON = {\r\n  5: ['Android Studio','Xcode','Visual Studio Code','Brackets','Firestore','Firebase','Microsoft IIS','NPM'],\r\n  4: ['CocoaPods (MacOS Package Manager)', 'Eclipse','Ingenuix CMS'],\r\n  3: ['Eclipse', 'MongoDB','Google Analytics','R Studios','ODBC'],\r\n  2: ['LDAP','Visual Studio 2017'],\r\n  1: ['DynamoDB']\r\n}\r\nconst randomString = (length) => {\r\n  return Math.round((Math.pow(36, length + 1) - Math.random() * Math.pow(36, length))).toString(36).slice(1);\r\n}\r\n\r\nconst Abilities = (props) => {\r\n  const {classes} = props;\r\n\r\n  /**\r\n   * \r\n   * @param {number} filledStarsAmt - amount of stars (propably out of 5)\r\n   * @param {number} emptyStarsAmt - unfilled stars (probably out of 5)\r\n   * @returns {jsx}\r\n   */\r\n  const generateStars = (filledStarsAmt, emptyStarsAmt) => {\r\n    let jsx = [];\r\n    while(filledStarsAmt > 0) {\r\n      jsx.push(<MdStar key={randomString(10)}/>);\r\n      filledStarsAmt--;\r\n    }\r\n    while(emptyStarsAmt > 0) {\r\n      jsx.push(<MdStarBorder key={randomString(10)}/>);\r\n      emptyStarsAmt--;\r\n    }  \r\n    return jsx.map(function(star) {return star});\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {object} abilityJSON - Each value is an array\r\n   * @returns {number}\r\n   */\r\n  const findAbilityJsonLength = (abilityJSON) => {\r\n    let length = 0;\r\n    Object.keys(abilityJSON).forEach(function(key) {\r\n      length += abilityJSON[key].length;\r\n    })\r\n    return length;\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {object} abilityJSON - An object of number:arrays pairs\r\n   */\r\n  const generateAbilityCategoryRow = (abilityJSON) => {\r\n    const halfwayMark = Math.ceil(findAbilityJsonLength(abilityJSON)/2);\r\n    let combinedArrayOfAllAbilites = []\r\n    // package abilities into individual objects, and then combine those objects into a singular array. The length of abilityJSON = the max rating for each individual ability.\r\n    for(let i=Object.keys(abilityJSON).length; i>0; i--) { // decrement\r\n      combinedArrayOfAllAbilites.push(...(abilityJSON[i]).map((abilityName) => { // map returns an array, but the '...' spread operator returns each element of that array\r\n          let temp = {}\r\n          temp[i]=abilityName\r\n          return temp\r\n        })\r\n      )\r\n    }\r\n\r\n    // divide array into left and right columns from the 'halfwayMark' index\r\n    let leftColArr = combinedArrayOfAllAbilites.splice(0, halfwayMark);\r\n    let rightColArr = combinedArrayOfAllAbilites;\r\n    return (\r\n      <Fragment>\r\n        <Grid item xs={12} sm={12} md={6} className={classes.columnLeftFormat}>{\r\n          leftColArr.map(function(abilityObject) {\r\n            let amtOfStars = Object.keys(abilityObject);\r\n            let abilityName = abilityObject[Object.keys(abilityObject)];\r\n            return (<Typography key={randomString(10)} variant=\"body1\">{abilityName} <span className={classes.starsSpan} style={{float: 'right'}}>{\r\n              generateStars(amtOfStars, 5-amtOfStars)\r\n            }</span></Typography>)\r\n          })\r\n        }</Grid>\r\n        <Grid item xs={12} sm={12} md={6} className={classes.columnRightFormat}>{\r\n          rightColArr.map(function(abilityObject) {\r\n            let amtOfStars = Object.keys(abilityObject);\r\n            let abilityName = abilityObject[Object.keys(abilityObject)];\r\n            return (<Typography key={randomString(10)} variant=\"body1\">{abilityName} <span className={classes.starsSpan} style={{float: 'right'}}>{\r\n              generateStars(amtOfStars, 5-amtOfStars)\r\n            }</span></Typography>)\r\n          })\r\n        }</Grid>\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <section className={classes.sectionBackground}>\r\n      <Grid container className={classes.siteContainer}>\r\n        <div className={classes.heading}><Typography variant=\"h4\">ABILITIES</Typography></div>\r\n        <div className={classes.headerShadow}><img alt='section header shadow' src={require('../../assets/img/section_header_shadow.png')}/></div>\r\n        <div className={classes.subHeading}><Typography variant=\"h5\">Skills</Typography></div>\r\n        { generateAbilityCategoryRow(skillsJSON) }\r\n        <div className={classes.subHeading}><Typography variant=\"h5\">Tools</Typography></div>\r\n        { generateAbilityCategoryRow(toolsJSON) }\r\n      </Grid>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default withStyles(jssStyle, {withTheme: true})(Abilities)"]},"metadata":{},"sourceType":"module"}